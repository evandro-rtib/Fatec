create table tb_cliente
( codcliente number(5) not null,
  nomecliente varchar2(30) not null,
  endereco varchar2(30),
  cidade varchar2(20),
  cep varchar2(10),
  uf char(2));


create table tb_vendedor
( codvendedor number(5) not null,
  nomevendedor varchar2(30) not null,
  faixa_com    number(4,2),
  salario_fixo number(7,2));


create table tb_produto
( codproduto   number(5) not null,
  descricao varchar(20),
  unid       char(2),
  valor_unit number(6,2));

Create table TB_PEDIDO

( NUMPEDIDO     number(5) NOT NULL,
  PRAZO_ENTREGA DATE,
  CODCLIENTE     number(5),
  CODVENDEDOR   number(5));

CREATE TABLE TB_ITEM_PEDIDO
(NUMPEDIDO   number(5) NOT NULL,
 CODPRODUTO  number(5) NOT NULL,
 QTDE        number(5));


-- DEFININDO AS RESTRIÇÕES

-- Criando as PK´s

ALTER TABLE TB_CLIENTE 
 ADD CONSTRAINT PK_CLIENTE_CODCLIENTE PRIMARY KEY(CODCLIENTE);


ALTER TABLE TB_PRODUTO 
 ADD CONSTRAINT PK_PRODUTO_CODPRODUTO PRIMARY KEY(CODPRODUTO);
 
 
 ALTER TABLE TB_VENDEDOR 
 ADD CONSTRAINT PK_VENDEDOR_CODVENDEDOR PRIMARY KEY(CODVENDEDOR);
 

ALTER TABLE TB_PEDIDO 
 ADD CONSTRAINT PK_PEDIDO_NUMPEDIDO PRIMARY KEY(NUMPEDIDO);


ALTER TABLE TB_ITEM_PEDIDO ADD CONSTRAint  PK_ITEMPEDIDO_PEDPROD 
 PRIMARY KEY(NUMPEDIDO,CODPRODUTO);
 
 
----
ALTER TABLE TB_PEDIDO 
 ADD CONSTRAINT FK_PEDIDO_CODCLI FOREIGN KEY(CODCLIENTE) REFERENCES TB_CLIENTE;

ALTER TABLE TB_PEDIDO 
 ADD CONSTRAINT FK_PEDIDO_CODVENDEDOR FOREIGN KEY(CODVENDEDOR) REFERENCES TB_VENDEDOR;

--- ITEM PEDIDO

ALTER TABLE TB_ITEM_PEDIDO 
    ADD CONSTRAINT FK_ITEMPEDIDO_NUMPEDIDO FOREIGN KEY(NUMPEDIDO) REFERENCES TB_PEDIDO;

ALTER TABLE TB_ITEM_PEDIDO 
    ADD CONSTRAINT FK_ITEMPEDIDO_CODPRODUTO FOREIGN KEY(CODPRODUTO) REFERENCES TB_PRODUTO;

----

-- INSERINDO DADOS
insert into TB_vendedor values (5,'Antonio Pedro',5.0,400);
insert into TB_vendedor values (15,'Carlos Sola',0.0,400);
insert into tb_vendedor values (25,'Ana Carolina',1.0,200);
insert into TB_vendedor values (35,'Solange Almeida',1.0,300);

SELECT * FROM TB_VENDEDOR;

INSERT INTO TB_CLIENTE 
VALUES ( 30, 'João da Silva', 'AV. MATT HOFFMANN, 1100', 'SÃO PAULO', '97056-001', 'SP')
/

INSERT INTO TB_CLIENTE 
VALUES ( 33, 'Carlos José', 'AV. DATT HOFFMANN, 1654', 'SÃO PAULO', '97056-058', 'SP')
/
    

INSERT INTO TB_CLIENTE 
VALUES ( 31, 'LUCAS ANTUNES', 'RUA TRODANI, 120', 'SOROCABA', '19658-023', 'SP')
/

INSERT INTO Tb_CLIENTE 
VALUES ( 32, 'LAURA STRAUSS', 'RUA TULIPAS, 650', 'PRIMAVERA', '18556-025', 'SP')
/


INSERT INTO TB_PRODUTO 
VALUES ( 11, 'APPLE DISPLAY', 'UN', 975.99)
/

INSERT INTO TB_PRODUTO VALUES ( 12, 'IBM THINK PAD R61', 'UN', 999.70)
/

INSERT INTO TB_PRODUTO VALUES ( 13, 'PÓ PARA TONER', 'KG', 85.60)
/

INSERT INTO TB_PEDIDO VALUES ( 7, to_date('26/02/2019','dd,mm,yyyy'), 31, 15)
/

INSERT INTO TB_PEDIDO VALUES ( 8, to_date('23/05/2019','dd,mm,yyyy'), 32, 25)
/

INSERT INTO TB_PEDIDO VALUES ( 9, to_date('21/02/2019','dd,mm,yyyy'), 32, 5)
/

INSERT INTO TB_PEDIDO VALUES ( 10, to_date('20/02/2019','dd,mm,yyyy'), 30, 5)
/

SELECT * FROM TB_PEDIDO;

INSERT INTO TB_ITEM_PEDIDO VALUES (7, 11, 3);

INSERT INTO TB_ITEM_PEDIDO VALUES (7, 12, 3);

INSERT INTO TB_ITEM_PEDIDO VALUES (8, 13, 3);
INSERT INTO TB_ITEM_PEDIDO VALUES (9, 11, 3);
INSERT INTO TB_ITEM_PEDIDO VALUES (10, 11, 3);
INSERT INTO TB_ITEM_PEDIDO VALUES (10, 12, 3);
INSERT INTO TB_ITEM_PEDIDO VALUES (10, 13, 3);

---
SELECT * FROM TB_CLIENTE;
SELECT * FROM TB_VENDEDOR;
SELECT * FROM TB_PRODUTO;
SELECT * FROM TB_PEDIDO;
SELECT * FROM TB_ITEM_PEDIDO;

--


   -- 1. Listar todos os clientes que moram na mesma cidade que 'João da Silva'.
SELECT * FROM TB_CLIENTE WHERE CIDADE=(SELECT cidade FROM TB_CLIENTE WHERE NOMECLIENTE='João da Silva');
   -- 2. Qual o nome dos vendedores que  tem o salário fixo  menor  que a média dos salários dos vendedores.
SELECT * FROM TB_VENDEDOR WHERE SALARIO_FIXO<(SELECT AVG(SALARIO_FIXO) FROM TB_VENDEDOR);
   -- 3. Quais os nomes dos clientes que só compraram com o vendedor com codigo 05 e com mais nenhum outro vendedor (fidelidade).
SELECT c.NOMECLIENTE FROM TB_PEDIDO p INNER JOIN TB_CLIENTE c on p.codCliente=c.codCliente WHERE c.CODCLIENTE not IN (SELECT CODCLIENTE FROM TB_PEDIDO WHERE CODVENDEDOR <> 5) and codvendedor=5;
   -- 4. Quais vendedores não fizeram mais de 2 pedidos.
SELECT DISTINCT v.NOMEVENDEDOR FROM TB_PEDIDO p INNER JOIN TB_VENDEDOR v on p.codvendedor=v.codvendedor WHERE p.codvendedor NOT IN (SELECT codVendedor FROM TB_PEDIDO group by codVendedor having count(*) > 2);
   -- 5. Quais os vendedores não fizeram nenhum pedido no mês de maio/2021
SELECT DISTINCT v.NOMEVENDEDOR FROM TB_PEDIDO p INNER JOIN TB_VENDEDOR v on p.codvendedor=v.codvendedor WHERE  P.CODVENDEDOR  NOT IN (SELECT  codvendedor FROM TB_PEDIDO WHERE PRAZO_ENTREGA BETWEEN to_date('01/05/2019','dd,mm,yyyy') and to_date('31/05/2019','dd,mm,yyyy') )
   -- 6. Listar o nome do vendedor que mais fez pedidos.
SELECT DISTINCT v.NOMEVENDEDOR FROM TB_PEDIDO p INNER JOIN TB_VENDEDOR v on p.codvendedor=v.codvendedor WHERE  P.CODVENDEDOR  IN (SELECT  codvendedor FROM TB_PEDIDO WHERE PRAZO_ENTREGA BETWEEN to_date('01/05/2019','dd,mm,yyyy') and to_date('31/05/2019','dd,mm,yyyy') )
   -- 7. Listar o nome dos clientes e o número total de pedidos associados a cada cliente em ordem decrescente de vendas, isto é do cliente que mais tem pedidos para o que menos tem.
SELECT C.NOMECLIENTE,COUNT(*) QTD_VENDAS FROM TB_PEDIDO P INNER JOIN TB_CLIENTE C ON P.CODCLIENTE=C.CODCLIENTE GROUP BY C.NOMECLIENTE ORDER BY QTD_VENDAS DESC
   -- 8. Excluir todos os itens dos pedidos feitos pelo cliente de código =32;
DELETE FROM TB_ITEM_PEDIDO  WHERE NUMPEDIDO IN (SELECT NUMPEDIDO FROM TB_PEDIDO WHERE CODCLIENTE=32);
   -- 9. Alterar o valor unitário de todos os produtos sem vendas no ano de 2021 para menos 20%.
UPDATE TB_PRODUTO SET  valor_unit=(valor_unit*0.8) WHERE CODPRODUTO NOT IN (SELECT CODPRODUTO FROM TB_ITEM_PEDIDO WHERE NUMPEDIDO IN (SELECT NUMPEDIDO FROM TB_PEDIDO WHERE PRAZO_ENTREGA BETWEEN TO_DATE('01/01/2021','dd,mm,yyyy') and TO_DATE('31/12/2021','dd,mm,yyyy')));
